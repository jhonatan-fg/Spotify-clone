scalar Upload
scalar Date
directive @auth on FIELD_DEFINITION | FIELD

type Query   {
    allUsers:[User]
    getOneUser(id:ID,email:String):User
    allArtist:[Artist]
    getOneArtist(id:ID):Artist
}

type Mutation {
    newUser(data:UserAdd!):User
    login(password:String!,email:String!):Auth
    updateUser(data:UserUpdate!,id:ID!):User @auth    
    deleteUser(id:ID!):Message @auth
    newArtist(dataA:ArtistAdd!):Artist
    deleteArtist(id:ID):Message
}

type User{
    _id:ID!
    first_name:String!
    last_name:String!
    birth_date:String
    email:String!
    password:String
    gender:GENDER #Esto es un commet
    photo:String
}

type Artist{
    _id:ID!
    name:String!
    description:String
    releases:[Release]
    cover:String
}

type Release {
    cover:String
    title:String!
    year:String!
    date:Date!
    songs:String!
    duration:String
}

type Auth {
    token:String!
    message:String!
}

type Message {
    code:Int
    message:String
}

input UserAdd {
    first_name:String!
    last_name:String!
    email:String!
    password:String!
    birth_date:String
    gender:GENDER
    photo:Upload

}

input UserUpdate {
    first_name:String
    last_name:String
    email:String
    password:String
    birth_date:String
    gender:GENDER
    photo:Upload
}

input ArtistAdd {
    name:String!
    description:String
    #releases:[Release]
    cover:String
}

input ReleaseAdd {
    street:String
    number:String
    city:String
    state:String
    country:String
    zip:String
}

input ReleaseEdit {
    street:String
    number:String
    city:String
    state:String
    country:String
    zip:String
}

enum GENDER {
    M
    F
    O
}